// <auto-generated/>
#pragma warning disable
using Microsoft.Extensions.Logging;
using Wolverine.Persistence.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: IncrementA2Handler614089625
    public class IncrementA2Handler614089625 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Wolverine.Persistence.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;
        private readonly Microsoft.Extensions.Logging.ILogger<Wolverine.Persistence.Testing.Marten.SelfLetteredAggregate> _logger;

        public IncrementA2Handler614089625(Wolverine.Persistence.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory, Microsoft.Extensions.Logging.ILogger<Wolverine.Persistence.Testing.Marten.SelfLetteredAggregate> logger)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
            _logger = logger;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.IMessageContext context, System.Threading.CancellationToken cancellation)
        {
            var incrementA2 = (Wolverine.Persistence.Testing.Marten.IncrementA2)context.Envelope.Message;
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            var eventStore = documentSession.Events;
            // Loading Marten aggregate
            var eventStream = await eventStore.FetchForWriting<Wolverine.Persistence.Testing.Marten.SelfLetteredAggregate>(incrementA2.SelfLetteredAggregateId, cancellation).ConfigureAwait(false);

            if (eventStream.Aggregate == null) throw new Wolverine.Persistence.Marten.UnknownAggregateException(typeof(Wolverine.Persistence.Testing.Marten.SelfLetteredAggregate), incrementA2.SelfLetteredAggregateId);
            var aEvent = eventStream.Aggregate.Handle(incrementA2, _logger);
            if (aEvent != null)
            {
                // Capturing any possible events returned from the command handlers
                eventStream.AppendOne(aEvent);

            }

            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);
        }

    }

    // END: IncrementA2Handler614089625
    
    
}

