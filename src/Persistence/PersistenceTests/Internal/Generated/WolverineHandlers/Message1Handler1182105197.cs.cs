// <auto-generated/>
#pragma warning disable
using Marten;
using Wolverine.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: Message1Handler1182105197
    public class Message1Handler1182105197 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Marten.IDocumentStore _documentStore;
        private readonly Wolverine.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;

        public Message1Handler1182105197(Marten.IDocumentStore documentStore, Wolverine.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory)
        {
            _documentStore = documentStore;
            _outboxedSessionFactory = outboxedSessionFactory;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            var usingDocumentSessionHandler = new PersistenceTests.Marten.UsingDocumentSessionHandler(_documentStore);
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            var message1 = (PersistenceTests.Marten.Message1)context.Envelope.Message;
            usingDocumentSessionHandler.Handle(message1, documentSession);
        }

    }

    // END: Message1Handler1182105197
    
    
}

