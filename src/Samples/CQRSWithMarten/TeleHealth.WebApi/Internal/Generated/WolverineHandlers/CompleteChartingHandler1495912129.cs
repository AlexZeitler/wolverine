// <auto-generated/>
#pragma warning disable
using Wolverine.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: CompleteChartingHandler1495912129
    public class CompleteChartingHandler1495912129 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Wolverine.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;

        public CompleteChartingHandler1495912129(Wolverine.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            var completeChartingHandler = new TeleHealth.WebApi.CompleteChartingHandler();
            var completeCharting = (TeleHealth.WebApi.CompleteCharting)context.Envelope.Message;
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            var eventStore = documentSession.Events;
            
            // Loading Marten aggregate
            var eventStream = await eventStore.FetchForExclusiveWriting<TeleHealth.Common.ProviderShift>(completeCharting.ProviderShiftId, cancellation).ConfigureAwait(false);

            var outgoing1 = completeChartingHandler.Handle(completeCharting, eventStream.Aggregate);
            eventStream.AppendOne(outgoing1);
            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);
        }

    }

    // END: CompleteChartingHandler1495912129
    
    
}

