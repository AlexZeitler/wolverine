// <auto-generated/>
#pragma warning disable
using System.Linq;
using TeleHealth.Common;

namespace Marten.Generated.EventStore
{
    // START: AppointmentDurationProjectionInlineProjection1399404633
    public class AppointmentDurationProjectionInlineProjection1399404633 : Marten.Events.Projections.SyncEventProjection<TeleHealth.Common.AppointmentDurationProjection>
    {
        private readonly TeleHealth.Common.AppointmentDurationProjection _projection;

        public AppointmentDurationProjectionInlineProjection1399404633(TeleHealth.Common.AppointmentDurationProjection projection) : base(projection)
        {
            _projection = projection;
        }



        public override void ApplyEvent(Marten.IDocumentOperations operations, Marten.Events.StreamAction streamAction, Marten.Events.IEvent e)
        {
            switch (e)
            {
                case Marten.Events.IEvent<TeleHealth.Common.AppointmentStarted> event_AppointmentStarted1:
                    Projection.Project(event_AppointmentStarted1, operations);
                    break;
                case Marten.Events.IEvent<TeleHealth.Common.AppointmentFinished> event_AppointmentFinished2:
                    Projection.Project(event_AppointmentFinished2, operations);
                    break;
            }

        }

    }

    // END: AppointmentDurationProjectionInlineProjection1399404633
    
    
}

