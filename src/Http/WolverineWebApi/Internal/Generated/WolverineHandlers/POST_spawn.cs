// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;
using Wolverine.Runtime;

namespace Internal.Generated.WolverineHandlers
{
    // START: POST_spawn
    public class POST_spawn : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _options;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime;

        public POST_spawn(Wolverine.Http.WolverineHttpOptions options, Wolverine.Runtime.IWolverineRuntime wolverineRuntime) : base(options)
        {
            _options = options;
            _wolverineRuntime = wolverineRuntime;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var messageContext = new Wolverine.Runtime.MessageContext(_wolverineRuntime);
            var (input, jsonContinue) = await ReadJsonAsync<WolverineWebApi.SpawnInput>(httpContext);
            if (jsonContinue == Wolverine.HandlerContinuation.Stop) return;
            (var stringValue, var outgoingMessages) = WolverineWebApi.MessageSpawnerEndpoint.Post(input);
            
            // Outgoing, cascaded message
            await messageContext.EnqueueCascadingAsync(outgoingMessages).ConfigureAwait(false);

            await WriteString(httpContext, stringValue);
        }

    }

    // END: POST_spawn
    
    
}

